name: ci

on:
  push:
    branches:
      - 'dev'
  # tags:        
  #     - v* #v1.0.0

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_ds_opal:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v1.4.1
      - name: Check install!
        run: cosign version

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/ds_opal
          tags: |
            latest,
            current

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          context: ./ds_opal
          file: ./ds_opal/Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
            

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/ds_opal@${{ steps.build-and-push.outputs.digest }}

  # build_ds_poll:
  #   runs-on: ubuntu-20.04

  #   steps:
  #     -
  #       name: Checkout 
  #       uses: actions/checkout@v2
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     -
  #       name: Build and push
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./ds_poll
  #         file: ./ds_poll/Dockerfile
  #         push: false
  #         tags: ghcr.io/${{ github.repository }}/ds_poll:latest

  # build_ds_queue:
  #   runs-on: ubuntu-20.04

  #   steps:
  #     -
  #       name: Checkout 
  #       uses: actions/checkout@v2
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     -
  #       name: Build and push
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./ds_queue
  #         file: ./ds_queue/Dockerfile
  #         push: false
  #         tags: ghcr.io/${{ github.repository }}/ds_queue:latest

  # build_ds_simple_client:
  #   runs-on: ubuntu-20.04

  #   steps:
  #     -
  #       name: Checkout 
  #       uses: actions/checkout@v2
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     -
  #       name: Build and push
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./ds_simple_client
  #         file: ./ds_simple_client/Dockerfile
  #         push: false
  #         tags: ghcr.io/${{ github.repository }}/ds_simple_client:latest


  # build_ds_test:
  #   runs-on: ubuntu-20.04

  #   steps:
  #     -
  #       name: Checkout 
  #       uses: actions/checkout@v2
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     -
  #       name: Build and push
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./ds_test
  #         file: ./ds_test/Dockerfile
  #         push: false
  #         tags: ghcr.io/${{ github.repository }}/ds_test:latest
  